services:
    ChorePlanner:
        image: "chrisbesch/chore_planner:0.2.0"
        container_name: "ChorePlanner"

        volumes:
            - "./data:/var/run/data"

        environment:
            CHORE_PLANNER_DB_PATH: /var/run/data/chore_planner.sqlite
            # This advances the current week to the next every time the weekly action is performed.
            # set to true for actual deployment
            CHORE_PLANNER_DEBUG: true
            # how many weeks to plan into the future
            CHORE_PLANNER_WEEKS_TO_PLAN: 5
            # probability distribution parameter between in [0, 1]
            # The higher gamma the more extremely the score effects the tenants probability of being
            # chosen for a chore.
            # 0 results the tenant with the highest score to never be picked (unless all tenants have the
            #   same score).
            # 1 results in all tenants having the same probability regardless of their score.
            #
            # See the mathematical proof in the repo.
            CHORE_PLANNER_GAMMA: 0.1
            # Should the chore_planner boot up with the last week or the current week.
            # Start with the current week if false.
            # Start with the last week if true.
            # This can be used to bootstrap the initial plan.
            # For that set this to true and send the container a SIGHUP straight away.
            CHORE_PLANNER_START_WITH_LAST_WEEK: false
            # the token of the telegram bot
            TELEGRAM_BOT_TOKEN: $TELEGRAM_BOT_TOKEN
            # the id of the chat the bot should listen on
            TELEGRAM_CHAT_ID: $TELEGRAM_CHAT_ID
            # When should the weekly action be performed?
            CRON_TIME: "* * * * *"

        restart: "unless-stopped"

    DockerCron:
        image: chrisbesch/docker_cron
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:rw"

